// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  id            Int          @id @default(autoincrement())
  title         String
  VideoArtist   VideoArtist? @relation(fields: [videoArtistId], references: [id])
  videoArtistId Int?
}

model VideoArtist {
  id     Int     @id @default(autoincrement())
  name   String
  videos Video[]
}

model IUser {
  id      Int       @id @default(autoincrement())
  name    String
  profile IProfile?
}

model IProfile {
  id     Int    @id @default(autoincrement())
  user   IUser  @relation(fields: [userId], references: [id])
  userId Int    @unique
  photo  String
  phone  String
}

model Post {
  id         Int                 @id @default(autoincrement())
  title      String
  categories CategoriesOnPosts[]
}

model Category {
  id    Int                 @id @default(autoincrement())
  name  String
  posts CategoriesOnPosts[]
}

model CategoriesOnPosts {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  asignedAt  DateTime @default(now())
  assignedBy String

  @@id([postId, categoryId])
}
